/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/components/say-hello.js":
/*!************************************!*\
  !*** ./js/components/say-hello.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SayHello; }\n/* harmony export */ });\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\nclass SayHello {\n  init() {\n    this.SayHello();\n  }\n  getName(firstName, lastName) {\n    let fullName = `${firstName} ${lastName}`;\n    return fullName;\n  }\n  SayHello() {\n    let fullName = this.getName(\"Rachid\", \"Aguourrame\");\n    jquery__WEBPACK_IMPORTED_MODULE_0___default()(\"body\").append(`<div class=\"container\"><h4>Hello, my name is ${fullName}</h4></div>`);\n  }\n}\n\n\n//# sourceURL=webpack://frontend-devenv/./js/components/say-hello.js?");

/***/ }),

/***/ "./js/maindev.js":
/*!***********************!*\
  !*** ./js/maindev.js ***!
  \***********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_say_hello__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/say-hello */ \"./js/components/say-hello.js\");\n\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(() => {\n  let syaHello = new _components_say_hello__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n  syaHello.init();\n});\n\n\n//# sourceURL=webpack://frontend-devenv/./js/maindev.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */\n(function(global, factory) {\n  \"use strict\";\n  if ( true && typeof module.exports === \"object\") {\n    module.exports = global.document ? factory(global, true) : function(w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  }\n})(typeof window !== \"undefined\" ? window : this, function(window2, noGlobal) {\n  \"use strict\";\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var flat = arr.flat ? function(array) {\n    return arr.flat.call(array);\n  } : function(array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n  var isFunction = function isFunction2(obj) {\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\" && typeof obj.item !== \"function\";\n  };\n  var isWindow = function isWindow2(obj) {\n    return obj != null && obj === obj.window;\n  };\n  var document = window2.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i, val, script = doc.createElement(\"script\");\n    script.text = code;\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    }\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  var version = \"3.6.0\", jQuery = function(selector, context) {\n    return new jQuery.fn.init(selector, context);\n  };\n  jQuery.fn = jQuery.prototype = {\n    jquery: version,\n    constructor: jQuery,\n    length: 0,\n    toArray: function() {\n      return slice.call(this);\n    },\n    get: function(num) {\n      if (num == null) {\n        return slice.call(this);\n      }\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    pushStack: function(elems) {\n      var ret = jQuery.merge(this.constructor(), elems);\n      ret.prevObject = this;\n      return ret;\n    },\n    each: function(callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function(callback) {\n      return this.pushStack(jQuery.map(this, function(elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function() {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function() {\n      return this.eq(0);\n    },\n    last: function() {\n      return this.eq(-1);\n    },\n    even: function() {\n      return this.pushStack(jQuery.grep(this, function(_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function() {\n      return this.pushStack(jQuery.grep(this, function(_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function(i) {\n      var len = this.length, j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function() {\n      return this.prevObject || this.constructor();\n    },\n    push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n  jQuery.extend = jQuery.fn.extend = function() {\n    var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n    if (typeof target === \"boolean\") {\n      deep = target;\n      target = arguments[i] || {};\n      i++;\n    }\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    }\n    if (i === length) {\n      target = this;\n      i--;\n    }\n    for (; i < length; i++) {\n      if ((options = arguments[i]) != null) {\n        for (name in options) {\n          copy = options[name];\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          }\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name];\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n            copyIsArray = false;\n            target[name] = jQuery.extend(deep, clone, copy);\n          } else if (copy !== void 0) {\n            target[name] = copy;\n          }\n        }\n      }\n    }\n    return target;\n  };\n  jQuery.extend({\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    isReady: true,\n    error: function(msg) {\n      throw new Error(msg);\n    },\n    noop: function() {\n    },\n    isPlainObject: function(obj) {\n      var proto, Ctor;\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n      proto = getProto(obj);\n      if (!proto) {\n        return true;\n      }\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function(obj) {\n      var name;\n      for (name in obj) {\n        return false;\n      }\n      return true;\n    },\n    globalEval: function(code, options, doc) {\n      DOMEval(code, { nonce: options && options.nonce }, doc);\n    },\n    each: function(obj, callback) {\n      var length, i = 0;\n      if (isArrayLike(obj)) {\n        length = obj.length;\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n      return obj;\n    },\n    makeArray: function(arr2, results) {\n      var ret = results || [];\n      if (arr2 != null) {\n        if (isArrayLike(Object(arr2))) {\n          jQuery.merge(ret, typeof arr2 === \"string\" ? [arr2] : arr2);\n        } else {\n          push.call(ret, arr2);\n        }\n      }\n      return ret;\n    },\n    inArray: function(elem, arr2, i) {\n      return arr2 == null ? -1 : indexOf.call(arr2, elem, i);\n    },\n    merge: function(first, second) {\n      var len = +second.length, j = 0, i = first.length;\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n      first.length = i;\n      return first;\n    },\n    grep: function(elems, callback, invert) {\n      var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n      return matches;\n    },\n    map: function(elems, callback, arg) {\n      var length, value, i = 0, ret = [];\n      if (isArrayLike(elems)) {\n        length = elems.length;\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      }\n      return flat(ret);\n    },\n    guid: 1,\n    support\n  });\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  }\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function(_i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n  function isArrayLike(obj) {\n    var length = !!obj && \"length\" in obj && obj.length, type = toType(obj);\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n  var Sizzle = function(window3) {\n    var i, support2, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document2, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = \"sizzle\" + 1 * new Date(), preferredDoc = window3.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n      return 0;\n    }, hasOwn2 = {}.hasOwnProperty, arr2 = [], pop = arr2.pop, pushNative = arr2.push, push2 = arr2.push, slice2 = arr2.slice, indexOf2 = function(list, elem) {\n      var i2 = 0, len = list.length;\n      for (; i2 < len; i2++) {\n        if (list[i2] === elem) {\n          return i2;\n        }\n      }\n      return -1;\n    }, booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\", whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\", identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\", attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + \"*([*^$|!~]?=)\" + whitespace + `*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\"|(` + identifier + \"))|)\" + whitespace + \"*\\\\]\", pseudos = \":(\" + identifier + `)(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|` + attributes + \")*)|.*)\\\\)|)\", rwhitespace = new RegExp(whitespace + \"+\", \"g\"), rtrim2 = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"), rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"), rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"), rdescend = new RegExp(whitespace + \"|>\"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp(\"^\" + identifier + \"$\"), matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    }, rhtml2 = /HTML$/i, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\\d$/i, rnative = /^[^{]+\\{\\s*\\[native \\w/, rquickExpr2 = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\"), funescape = function(escape, nonHex) {\n      var high = \"0x\" + escape.slice(1) - 65536;\n      return nonHex ? nonHex : high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);\n    }, rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g, fcssescape = function(ch, asCodePoint) {\n      if (asCodePoint) {\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        }\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      }\n      return \"\\\\\" + ch;\n    }, unloadHandler = function() {\n      setDocument();\n    }, inDisabledFieldset = addCombinator(function(elem) {\n      return elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n    }, { dir: \"parentNode\", next: \"legend\" });\n    try {\n      push2.apply(arr2 = slice2.call(preferredDoc.childNodes), preferredDoc.childNodes);\n      arr2[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push2 = {\n        apply: arr2.length ? function(target, els) {\n          pushNative.apply(target, slice2.call(els));\n        } : function(target, els) {\n          var j = target.length, i2 = 0;\n          while (target[j++] = els[i2++]) {\n          }\n          target.length = j - 1;\n        }\n      };\n    }\n    function Sizzle2(selector, context, results, seed) {\n      var m, i2, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument, nodeType = context ? context.nodeType : 9;\n      results = results || [];\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      }\n      if (!seed) {\n        setDocument(context);\n        context = context || document2;\n        if (documentIsHTML) {\n          if (nodeType !== 11 && (match = rquickExpr2.exec(selector))) {\n            if (m = match[1]) {\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                }\n              } else {\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              }\n            } else if (match[2]) {\n              push2.apply(results, context.getElementsByTagName(selector));\n              return results;\n            } else if ((m = match[3]) && support2.getElementsByClassName && context.getElementsByClassName) {\n              push2.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          }\n          if (support2.qsa && !nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector)) && (nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\")) {\n            newSelector = selector;\n            newContext = context;\n            if (nodeType === 1 && (rdescend.test(selector) || rcombinators.test(selector))) {\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n              if (newContext !== context || !support2.scope) {\n                if (nid = context.getAttribute(\"id\")) {\n                  nid = nid.replace(rcssescape, fcssescape);\n                } else {\n                  context.setAttribute(\"id\", nid = expando);\n                }\n              }\n              groups = tokenize(selector);\n              i2 = groups.length;\n              while (i2--) {\n                groups[i2] = (nid ? \"#\" + nid : \":scope\") + \" \" + toSelector(groups[i2]);\n              }\n              newSelector = groups.join(\",\");\n            }\n            try {\n              push2.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute(\"id\");\n              }\n            }\n          }\n        }\n      }\n      return select(selector.replace(rtrim2, \"$1\"), context, results, seed);\n    }\n    function createCache() {\n      var keys = [];\n      function cache(key, value) {\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          delete cache[keys.shift()];\n        }\n        return cache[key + \" \"] = value;\n      }\n      return cache;\n    }\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    function assert(fn) {\n      var el = document2.createElement(\"fieldset\");\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n        el = null;\n      }\n    }\n    function addHandle(attrs, handler) {\n      var arr3 = attrs.split(\"|\"), i2 = arr3.length;\n      while (i2--) {\n        Expr.attrHandle[arr3[i2]] = handler;\n      }\n    }\n    function siblingCheck(a, b) {\n      var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;\n      if (diff) {\n        return diff;\n      }\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n      return a ? 1 : -1;\n    }\n    function createInputPseudo(type) {\n      return function(elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    function createButtonPseudo(type) {\n      return function(elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    function createDisabledPseudo(disabled) {\n      return function(elem) {\n        if (\"form\" in elem) {\n          if (elem.parentNode && elem.disabled === false) {\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            }\n            return elem.isDisabled === disabled || elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n          return elem.disabled === disabled;\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        }\n        return false;\n      };\n    }\n    function createPositionalPseudo(fn) {\n      return markFunction(function(argument) {\n        argument = +argument;\n        return markFunction(function(seed, matches2) {\n          var j, matchIndexes = fn([], seed.length, argument), i2 = matchIndexes.length;\n          while (i2--) {\n            if (seed[j = matchIndexes[i2]]) {\n              seed[j] = !(matches2[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    }\n    support2 = Sizzle2.support = {};\n    isXML = Sizzle2.isXML = function(elem) {\n      var namespace = elem && elem.namespaceURI, docElem2 = elem && (elem.ownerDocument || elem).documentElement;\n      return !rhtml2.test(namespace || docElem2 && docElem2.nodeName || \"HTML\");\n    };\n    setDocument = Sizzle2.setDocument = function(node) {\n      var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;\n      if (doc == document2 || doc.nodeType !== 9 || !doc.documentElement) {\n        return document2;\n      }\n      document2 = doc;\n      docElem = document2.documentElement;\n      documentIsHTML = !isXML(document2);\n      if (preferredDoc != document2 && (subWindow = document2.defaultView) && subWindow.top !== subWindow) {\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false);\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      }\n      support2.scope = assert(function(el) {\n        docElem.appendChild(el).appendChild(document2.createElement(\"div\"));\n        return typeof el.querySelectorAll !== \"undefined\" && !el.querySelectorAll(\":scope fieldset div\").length;\n      });\n      support2.attributes = assert(function(el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      support2.getElementsByTagName = assert(function(el) {\n        el.appendChild(document2.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      });\n      support2.getElementsByClassName = rnative.test(document2.getElementsByClassName);\n      support2.getById = assert(function(el) {\n        docElem.appendChild(el).id = expando;\n        return !document2.getElementsByName || !document2.getElementsByName(expando).length;\n      });\n      if (support2.getById) {\n        Expr.filter[\"ID\"] = function(id) {\n          var attrId = id.replace(runescape, funescape);\n          return function(elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n        Expr.find[\"ID\"] = function(id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function(id) {\n          var attrId = id.replace(runescape, funescape);\n          return function(elem) {\n            var node2 = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node2 && node2.value === attrId;\n          };\n        };\n        Expr.find[\"ID\"] = function(id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node2, i2, elems, elem = context.getElementById(id);\n            if (elem) {\n              node2 = elem.getAttributeNode(\"id\");\n              if (node2 && node2.value === id) {\n                return [elem];\n              }\n              elems = context.getElementsByName(id);\n              i2 = 0;\n              while (elem = elems[i2++]) {\n                node2 = elem.getAttributeNode(\"id\");\n                if (node2 && node2.value === id) {\n                  return [elem];\n                }\n              }\n            }\n            return [];\n          }\n        };\n      }\n      Expr.find[\"TAG\"] = support2.getElementsByTagName ? function(tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag);\n        } else if (support2.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function(tag, context) {\n        var elem, tmp = [], i2 = 0, results = context.getElementsByTagName(tag);\n        if (tag === \"*\") {\n          while (elem = results[i2++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n          return tmp;\n        }\n        return results;\n      };\n      Expr.find[\"CLASS\"] = support2.getElementsByClassName && function(className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      rbuggyMatches = [];\n      rbuggyQSA = [];\n      if (support2.qsa = rnative.test(document2.querySelectorAll)) {\n        assert(function(el) {\n          var input;\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a><select id='\" + expando + \"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\";\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + `*(?:''|\"\")`);\n          }\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          }\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          }\n          input = document2.createElement(\"input\");\n          input.setAttribute(\"name\", \"\");\n          el.appendChild(input);\n          if (!el.querySelectorAll(\"[name='']\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + `*(?:''|\"\")`);\n          }\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          }\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          }\n          el.querySelectorAll(\"\\\\\\f\");\n          rbuggyQSA.push(\"[\\\\r\\\\n\\\\f]\");\n        });\n        assert(function(el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";\n          var input = document2.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\");\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          }\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          }\n          docElem.appendChild(el).disabled = true;\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          }\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n      if (support2.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function(el) {\n          support2.disconnectedMatch = matches.call(el, \"*\");\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      hasCompare = rnative.test(docElem.compareDocumentPosition);\n      contains = hasCompare || rnative.test(docElem.contains) ? function(a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function(a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n        return false;\n      };\n      sortOrder = hasCompare ? function(a, b) {\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n        if (compare) {\n          return compare;\n        }\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1;\n        if (compare & 1 || !support2.sortDetached && b.compareDocumentPosition(a) === compare) {\n          if (a == document2 || a.ownerDocument == preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          }\n          if (b == document2 || b.ownerDocument == preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          }\n          return sortInput ? indexOf2(sortInput, a) - indexOf2(sortInput, b) : 0;\n        }\n        return compare & 4 ? -1 : 1;\n      } : function(a, b) {\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n        var cur, i2 = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];\n        if (!aup || !bup) {\n          return a == document2 ? -1 : b == document2 ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf2(sortInput, a) - indexOf2(sortInput, b) : 0;\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        }\n        cur = a;\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n        cur = b;\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        }\n        while (ap[i2] === bp[i2]) {\n          i2++;\n        }\n        return i2 ? siblingCheck(ap[i2], bp[i2]) : ap[i2] == preferredDoc ? -1 : bp[i2] == preferredDoc ? 1 : 0;\n      };\n      return document2;\n    };\n    Sizzle2.matches = function(expr, elements) {\n      return Sizzle2(expr, null, null, elements);\n    };\n    Sizzle2.matchesSelector = function(elem, expr) {\n      setDocument(elem);\n      if (support2.matchesSelector && documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr);\n          if (ret || support2.disconnectedMatch || elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n      return Sizzle2(expr, document2, null, [elem]).length > 0;\n    };\n    Sizzle2.contains = function(context, elem) {\n      if ((context.ownerDocument || context) != document2) {\n        setDocument(context);\n      }\n      return contains(context, elem);\n    };\n    Sizzle2.attr = function(elem, name) {\n      if ((elem.ownerDocument || elem) != document2) {\n        setDocument(elem);\n      }\n      var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn2.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;\n      return val !== void 0 ? val : support2.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n    Sizzle2.escape = function(sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n    Sizzle2.error = function(msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    Sizzle2.uniqueSort = function(results) {\n      var elem, duplicates = [], j = 0, i2 = 0;\n      hasDuplicate = !support2.detectDuplicates;\n      sortInput = !support2.sortStable && results.slice(0);\n      results.sort(sortOrder);\n      if (hasDuplicate) {\n        while (elem = results[i2++]) {\n          if (elem === results[i2]) {\n            j = duplicates.push(i2);\n          }\n        }\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      }\n      sortInput = null;\n      return results;\n    };\n    getText = Sizzle2.getText = function(elem) {\n      var node, ret = \"\", i2 = 0, nodeType = elem.nodeType;\n      if (!nodeType) {\n        while (node = elem[i2++]) {\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      }\n      return ret;\n    };\n    Expr = Sizzle2.selectors = {\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": { dir: \"parentNode\", first: true },\n        \" \": { dir: \"parentNode\" },\n        \"+\": { dir: \"previousSibling\", first: true },\n        \"~\": { dir: \"previousSibling\" }\n      },\n      preFilter: {\n        \"ATTR\": function(match) {\n          match[1] = match[1].replace(runescape, funescape);\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function(match) {\n          match[1] = match[1].toLowerCase();\n          if (match[1].slice(0, 3) === \"nth\") {\n            if (!match[3]) {\n              Sizzle2.error(match[0]);\n            }\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\");\n          } else if (match[3]) {\n            Sizzle2.error(match[0]);\n          }\n          return match;\n        },\n        \"PSEUDO\": function(match) {\n          var excess, unquoted = !match[6] && match[2];\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          }\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\";\n          } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          }\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function(nodeNameSelector) {\n          var nodeName2 = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function() {\n            return true;\n          } : function(elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName2;\n          };\n        },\n        \"CLASS\": function(className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function(elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function(name, operator, check) {\n          return function(elem) {\n            var result = Sizzle2.attr(elem, name);\n            if (result == null) {\n              return operator === \"!=\";\n            }\n            if (!operator) {\n              return true;\n            }\n            result += \"\";\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n          };\n        },\n        \"CHILD\": function(type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\", forward = type.slice(-4) !== \"last\", ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? function(elem) {\n            return !!elem.parentNode;\n          } : function(elem, _context, xml) {\n            var cache, uniqueCache, outerCache, node, nodeIndex, start, dir2 = simple !== forward ? \"nextSibling\" : \"previousSibling\", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;\n            if (parent) {\n              if (simple) {\n                while (dir2) {\n                  node = elem;\n                  while (node = node[dir2]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  }\n                  start = dir2 = type === \"only\" && !start && \"nextSibling\";\n                }\n                return true;\n              }\n              start = [forward ? parent.firstChild : parent.lastChild];\n              if (forward && useCache) {\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {});\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n                while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                if (useCache) {\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {});\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                }\n                if (diff === false) {\n                  while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {});\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function(pseudo, argument) {\n          var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle2.error(\"unsupported pseudo: \" + pseudo);\n          if (fn[expando]) {\n            return fn(argument);\n          }\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches2) {\n              var idx, matched = fn(seed, argument), i2 = matched.length;\n              while (i2--) {\n                idx = indexOf2(seed, matched[i2]);\n                seed[idx] = !(matches2[idx] = matched[i2]);\n              }\n            }) : function(elem) {\n              return fn(elem, 0, args);\n            };\n          }\n          return fn;\n        }\n      },\n      pseudos: {\n        \"not\": markFunction(function(selector) {\n          var input = [], results = [], matcher = compile(selector.replace(rtrim2, \"$1\"));\n          return matcher[expando] ? markFunction(function(seed, matches2, _context, xml) {\n            var elem, unmatched = matcher(seed, null, xml, []), i2 = seed.length;\n            while (i2--) {\n              if (elem = unmatched[i2]) {\n                seed[i2] = !(matches2[i2] = elem);\n              }\n            }\n          }) : function(elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results);\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function(selector) {\n          return function(elem) {\n            return Sizzle2(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function(text) {\n          text = text.replace(runescape, funescape);\n          return function(elem) {\n            return (elem.textContent || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        \"lang\": markFunction(function(lang) {\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle2.error(\"unsupported lang: \" + lang);\n          }\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function(elem) {\n            var elemLang;\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n            return false;\n          };\n        }),\n        \"target\": function(elem) {\n          var hash = window3.location && window3.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function(elem) {\n          return elem === docElem;\n        },\n        \"focus\": function(elem) {\n          return elem === document2.activeElement && (!document2.hasFocus || document2.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function(elem) {\n          var nodeName2 = elem.nodeName.toLowerCase();\n          return nodeName2 === \"input\" && !!elem.checked || nodeName2 === \"option\" && !!elem.selected;\n        },\n        \"selected\": function(elem) {\n          if (elem.parentNode) {\n            elem.parentNode.selectedIndex;\n          }\n          return elem.selected === true;\n        },\n        \"empty\": function(elem) {\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n          return true;\n        },\n        \"parent\": function(elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        \"header\": function(elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function(elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function(elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function(elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ((attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        \"first\": createPositionalPseudo(function() {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function(_matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function(_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function(matchIndexes, length) {\n          var i2 = 0;\n          for (; i2 < length; i2 += 2) {\n            matchIndexes.push(i2);\n          }\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function(matchIndexes, length) {\n          var i2 = 1;\n          for (; i2 < length; i2 += 2) {\n            matchIndexes.push(i2);\n          }\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n          var i2 = argument < 0 ? argument + length : argument > length ? length : argument;\n          for (; --i2 >= 0; ) {\n            matchIndexes.push(i2);\n          }\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function(matchIndexes, length, argument) {\n          var i2 = argument < 0 ? argument + length : argument;\n          for (; ++i2 < length; ) {\n            matchIndexes.push(i2);\n          }\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n    for (i in { radio: true, checkbox: true, file: true, password: true, image: true }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n    for (i in { submit: true, reset: true }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    }\n    function setFilters() {\n    }\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n    tokenize = Sizzle2.tokenize = function(selector, parseOnly) {\n      var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + \" \"];\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n      while (soFar) {\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n          groups.push(tokens = []);\n        }\n        matched = false;\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            type: match[0].replace(rtrim2, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        }\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n        if (!matched) {\n          break;\n        }\n      }\n      return parseOnly ? soFar.length : soFar ? Sizzle2.error(selector) : tokenCache(selector, groups).slice(0);\n    };\n    function toSelector(tokens) {\n      var i2 = 0, len = tokens.length, selector = \"\";\n      for (; i2 < len; i2++) {\n        selector += tokens[i2].value;\n      }\n      return selector;\n    }\n    function addCombinator(matcher, combinator, base) {\n      var dir2 = combinator.dir, skip = combinator.next, key = skip || dir2, checkNonElements = base && key === \"parentNode\", doneName = done++;\n      return combinator.first ? function(elem, context, xml) {\n        while (elem = elem[dir2]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n        return false;\n      } : function(elem, context, xml) {\n        var oldCache, uniqueCache, outerCache, newCache = [dirruns, doneName];\n        if (xml) {\n          while (elem = elem[dir2]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir2]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {});\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir2] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                return newCache[2] = oldCache[2];\n              } else {\n                uniqueCache[key] = newCache;\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n        return false;\n      };\n    }\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function(elem, context, xml) {\n        var i2 = matchers.length;\n        while (i2--) {\n          if (!matchers[i2](elem, context, xml)) {\n            return false;\n          }\n        }\n        return true;\n      } : matchers[0];\n    }\n    function multipleContexts(selector, contexts, results) {\n      var i2 = 0, len = contexts.length;\n      for (; i2 < len; i2++) {\n        Sizzle2(selector, contexts[i2], results);\n      }\n      return results;\n    }\n    function condense(unmatched, map, filter, context, xml) {\n      var elem, newUnmatched = [], i2 = 0, len = unmatched.length, mapped = map != null;\n      for (; i2 < len; i2++) {\n        if (elem = unmatched[i2]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n            if (mapped) {\n              map.push(i2);\n            }\n          }\n        }\n      }\n      return newUnmatched;\n    }\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n      return markFunction(function(seed, results, context, xml) {\n        var temp, i2, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []), matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        }\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml);\n          i2 = temp.length;\n          while (i2--) {\n            if (elem = temp[i2]) {\n              matcherOut[postMap[i2]] = !(matcherIn[postMap[i2]] = elem);\n            }\n          }\n        }\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              temp = [];\n              i2 = matcherOut.length;\n              while (i2--) {\n                if (elem = matcherOut[i2]) {\n                  temp.push(matcherIn[i2] = elem);\n                }\n              }\n              postFinder(null, matcherOut = [], temp, xml);\n            }\n            i2 = matcherOut.length;\n            while (i2--) {\n              if ((elem = matcherOut[i2]) && (temp = postFinder ? indexOf2(seed, elem) : preMap[i2]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          }\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push2.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n    function matcherFromTokens(tokens) {\n      var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[\" \"], i2 = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {\n        return elem === checkContext;\n      }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {\n        return indexOf2(checkContext, elem) > -1;\n      }, implicitRelative, true), matchers = [function(elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n        checkContext = null;\n        return ret;\n      }];\n      for (; i2 < len; i2++) {\n        if (matcher = Expr.relative[tokens[i2].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i2].type].apply(null, tokens[i2].matches);\n          if (matcher[expando]) {\n            j = ++i2;\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n            return setMatcher(i2 > 1 && elementMatcher(matchers), i2 > 1 && toSelector(tokens.slice(0, i2 - 1).concat({ value: tokens[i2 - 2].type === \" \" ? \"*\" : \"\" })).replace(rtrim2, \"$1\"), matcher, i2 < j && matcherFromTokens(tokens.slice(i2, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n          matchers.push(matcher);\n        }\n      }\n      return elementMatcher(matchers);\n    }\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, outermost) {\n        var elem, j, matcher, matchedCount = 0, i2 = \"0\", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;\n        if (outermost) {\n          outermostContext = context == document2 || context || outermost;\n        }\n        for (; i2 !== len && (elem = elems[i2]) != null; i2++) {\n          if (byElement && elem) {\n            j = 0;\n            if (!context && elem.ownerDocument != document2) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document2, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          }\n          if (bySet) {\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            }\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        }\n        matchedCount += i2;\n        if (bySet && i2 !== matchedCount) {\n          j = 0;\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n          if (seed) {\n            if (matchedCount > 0) {\n              while (i2--) {\n                if (!(unmatched[i2] || setMatched[i2])) {\n                  setMatched[i2] = pop.call(results);\n                }\n              }\n            }\n            setMatched = condense(setMatched);\n          }\n          push2.apply(results, setMatched);\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle2.uniqueSort(results);\n          }\n        }\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n        return unmatched;\n      };\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n    compile = Sizzle2.compile = function(selector, match) {\n      var i2, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + \" \"];\n      if (!cached) {\n        if (!match) {\n          match = tokenize(selector);\n        }\n        i2 = match.length;\n        while (i2--) {\n          cached = matcherFromTokens(match[i2]);\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        }\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n        cached.selector = selector;\n      }\n      return cached;\n    };\n    select = Sizzle2.select = function(selector, context, results, seed) {\n      var i2, tokens, token, type, find, compiled = typeof selector === \"function\" && selector, match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || [];\n      if (match.length === 1) {\n        tokens = match[0] = match[0].slice(0);\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n          if (!context) {\n            return results;\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n          selector = selector.slice(tokens.shift().value.length);\n        }\n        i2 = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n        while (i2--) {\n          token = tokens[i2];\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n          if (find = Expr.find[type]) {\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              tokens.splice(i2, 1);\n              selector = seed.length && toSelector(tokens);\n              if (!selector) {\n                push2.apply(results, seed);\n                return results;\n              }\n              break;\n            }\n          }\n        }\n      }\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    };\n    support2.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando;\n    support2.detectDuplicates = !!hasDuplicate;\n    setDocument();\n    support2.sortDetached = assert(function(el) {\n      return el.compareDocumentPosition(document2.createElement(\"fieldset\")) & 1;\n    });\n    if (!assert(function(el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function(elem, name, isXML2) {\n        if (!isXML2) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    }\n    if (!support2.attributes || !assert(function(el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function(elem, _name, isXML2) {\n        if (!isXML2 && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    }\n    if (!assert(function(el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function(elem, name, isXML2) {\n        var val;\n        if (!isXML2) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n    return Sizzle2;\n  }(window2);\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors;\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n  var dir = function(elem, dir2, until) {\n    var matched = [], truncate = until !== void 0;\n    while ((elem = elem[dir2]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n        matched.push(elem);\n      }\n    }\n    return matched;\n  };\n  var siblings = function(n, elem) {\n    var matched = [];\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n    return matched;\n  };\n  var rneedsContext = jQuery.expr.match.needsContext;\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function(elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    }\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function(elem) {\n        return elem === qualifier !== not;\n      });\n    }\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function(elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    }\n    return jQuery.filter(qualifier, elements, not);\n  }\n  jQuery.filter = function(expr, elems, not) {\n    var elem = elems[0];\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n    return jQuery.find.matches(expr, jQuery.grep(elems, function(elem2) {\n      return elem2.nodeType === 1;\n    }));\n  };\n  jQuery.fn.extend({\n    find: function(selector) {\n      var i, ret, len = this.length, self = this;\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function() {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n      ret = this.pushStack([]);\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function(selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function(selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function(selector) {\n      return !!winnow(this, typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  });\n  var rootjQuery, rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/, init = jQuery.fn.init = function(selector, context, root) {\n    var match, elem;\n    if (!selector) {\n      return this;\n    }\n    root = root || rootjQuery;\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      }\n      if (match && (match[1] || !context)) {\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context;\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              if (isFunction(this[match])) {\n                this[match](context[match]);\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n          return this;\n        } else {\n          elem = document.getElementById(match[2]);\n          if (elem) {\n            this[0] = elem;\n            this.length = 1;\n          }\n          return this;\n        }\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector);\n      } else {\n        return this.constructor(context).find(selector);\n      }\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this;\n    } else if (isFunction(selector)) {\n      return root.ready !== void 0 ? root.ready(selector) : selector(jQuery);\n    }\n    return jQuery.makeArray(selector, this);\n  };\n  init.prototype = jQuery.fn;\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function(target) {\n      var targets = jQuery(target, this), l = targets.length;\n      return this.filter(function() {\n        var i = 0;\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function(selectors, context) {\n      var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== \"string\" && jQuery(selectors);\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    index: function(elem) {\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      }\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      }\n      return indexOf.call(this, elem.jquery ? elem[0] : elem);\n    },\n    add: function(selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function(selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n  function sibling(cur, dir2) {\n    while ((cur = cur[dir2]) && cur.nodeType !== 1) {\n    }\n    return cur;\n  }\n  jQuery.each({\n    parent: function(elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function(elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function(elem, _i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function(elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function(elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function(elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function(elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function(elem, _i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function(elem, _i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function(elem) {\n      return siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function(elem) {\n      return siblings(elem.firstChild);\n    },\n    contents: function(elem) {\n      if (elem.contentDocument != null && getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      }\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function(name, fn) {\n    jQuery.fn[name] = function(until, selector) {\n      var matched = jQuery.map(this, fn, until);\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n      if (this.length > 1) {\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        }\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function(_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  jQuery.Callbacks = function(options) {\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n    var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = function() {\n      locked = locked || options.once;\n      fired = firing = true;\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n        while (++firingIndex < list.length) {\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      }\n      if (!options.memory) {\n        memory = false;\n      }\n      firing = false;\n      if (locked) {\n        if (memory) {\n          list = [];\n        } else {\n          list = \"\";\n        }\n      }\n    }, self = {\n      add: function() {\n        if (list) {\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n          (function add(args) {\n            jQuery.each(args, function(_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                add(arg);\n              }\n            });\n          })(arguments);\n          if (memory && !firing) {\n            fire();\n          }\n        }\n        return this;\n      },\n      remove: function() {\n        jQuery.each(arguments, function(_, arg) {\n          var index;\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1);\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      has: function(fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      empty: function() {\n        if (list) {\n          list = [];\n        }\n        return this;\n      },\n      disable: function() {\n        locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function() {\n        return !list;\n      },\n      lock: function() {\n        locked = queue = [];\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n        return this;\n      },\n      locked: function() {\n        return !!locked;\n      },\n      fireWith: function(context, args) {\n        if (!locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n          if (!firing) {\n            fire();\n          }\n        }\n        return this;\n      },\n      fire: function() {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      fired: function() {\n        return !!fired;\n      }\n    };\n    return self;\n  };\n  function Identity(v) {\n    return v;\n  }\n  function Thrower(ex) {\n    throw ex;\n  }\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n    try {\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject);\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject);\n      } else {\n        resolve.apply(void 0, [value].slice(noValue));\n      }\n    } catch (value2) {\n      reject.apply(void 0, [value2]);\n    }\n  }\n  jQuery.extend({\n    Deferred: function(func) {\n      var tuples = [\n        [\n          \"notify\",\n          \"progress\",\n          jQuery.Callbacks(\"memory\"),\n          jQuery.Callbacks(\"memory\"),\n          2\n        ],\n        [\n          \"resolve\",\n          \"done\",\n          jQuery.Callbacks(\"once memory\"),\n          jQuery.Callbacks(\"once memory\"),\n          0,\n          \"resolved\"\n        ],\n        [\n          \"reject\",\n          \"fail\",\n          jQuery.Callbacks(\"once memory\"),\n          jQuery.Callbacks(\"once memory\"),\n          1,\n          \"rejected\"\n        ]\n      ], state = \"pending\", promise = {\n        state: function() {\n          return state;\n        },\n        always: function() {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function(fn) {\n          return promise.then(null, fn);\n        },\n        pipe: function() {\n          var fns = arguments;\n          return jQuery.Deferred(function(newDefer) {\n            jQuery.each(tuples, function(_i, tuple) {\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];\n              deferred[tuple[1]](function() {\n                var returned = fn && fn.apply(this, arguments);\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function(onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n          function resolve(depth, deferred2, handler, special) {\n            return function() {\n              var that = this, args = arguments, mightThrow = function() {\n                var returned, then;\n                if (depth < maxDepth) {\n                  return;\n                }\n                returned = handler.apply(that, args);\n                if (returned === deferred2.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                }\n                then = returned && (typeof returned === \"object\" || typeof returned === \"function\") && returned.then;\n                if (isFunction(then)) {\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred2, Identity, special), resolve(maxDepth, deferred2, Thrower, special));\n                  } else {\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred2, Identity, special), resolve(maxDepth, deferred2, Thrower, special), resolve(maxDepth, deferred2, Identity, deferred2.notifyWith));\n                  }\n                } else {\n                  if (handler !== Identity) {\n                    that = void 0;\n                    args = [returned];\n                  }\n                  (special || deferred2.resolveWith)(that, args);\n                }\n              }, process = special ? mightThrow : function() {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  }\n                  if (depth + 1 >= maxDepth) {\n                    if (handler !== Thrower) {\n                      that = void 0;\n                      args = [e];\n                    }\n                    deferred2.rejectWith(that, args);\n                  }\n                }\n              };\n              if (depth) {\n                process();\n              } else {\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n                window2.setTimeout(process);\n              }\n            };\n          }\n          return jQuery.Deferred(function(newDefer) {\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        promise: function(obj) {\n          return obj != null ? jQuery.extend(obj, promise) : promise;\n        }\n      }, deferred = {};\n      jQuery.each(tuples, function(i, tuple) {\n        var list = tuple[2], stateString = tuple[5];\n        promise[tuple[1]] = list.add;\n        if (stateString) {\n          list.add(function() {\n            state = stateString;\n          }, tuples[3 - i][2].disable, tuples[3 - i][3].disable, tuples[0][2].lock, tuples[0][3].lock);\n        }\n        list.add(tuple[3].fire);\n        deferred[tuple[0]] = function() {\n          deferred[tuple[0] + \"With\"](this === deferred ? void 0 : this, arguments);\n          return this;\n        };\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      });\n      promise.promise(deferred);\n      if (func) {\n        func.call(deferred, deferred);\n      }\n      return deferred;\n    },\n    when: function(singleValue) {\n      var remaining = arguments.length, i = remaining, resolveContexts = Array(i), resolveValues = slice.call(arguments), primary = jQuery.Deferred(), updateFunc = function(i2) {\n        return function(value) {\n          resolveContexts[i2] = this;\n          resolveValues[i2] = arguments.length > 1 ? slice.call(arguments) : value;\n          if (!--remaining) {\n            primary.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      };\n      if (remaining <= 1) {\n        adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining);\n        if (primary.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return primary.then();\n        }\n      }\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), primary.reject);\n      }\n      return primary.promise();\n    }\n  });\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n  jQuery.Deferred.exceptionHook = function(error, stack) {\n    if (window2.console && window2.console.warn && error && rerrorNames.test(error.name)) {\n      window2.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n  jQuery.readyException = function(error) {\n    window2.setTimeout(function() {\n      throw error;\n    });\n  };\n  var readyList = jQuery.Deferred();\n  jQuery.fn.ready = function(fn) {\n    readyList.then(fn).catch(function(error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n  jQuery.extend({\n    isReady: false,\n    readyWait: 1,\n    ready: function(wait) {\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      }\n      jQuery.isReady = true;\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      }\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then;\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window2.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  }\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    window2.setTimeout(jQuery.ready);\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", completed);\n    window2.addEventListener(\"load\", completed);\n  }\n  var access = function(elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0, len = elems.length, bulk = key == null;\n    if (toType(key) === \"object\") {\n      chainable = true;\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      }\n    } else if (value !== void 0) {\n      chainable = true;\n      if (!isFunction(value)) {\n        raw = true;\n      }\n      if (bulk) {\n        if (raw) {\n          fn.call(elems, value);\n          fn = null;\n        } else {\n          bulk = fn;\n          fn = function(elem, _key, value2) {\n            return bulk.call(jQuery(elem), value2);\n          };\n        }\n      }\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n    if (chainable) {\n      return elems;\n    }\n    if (bulk) {\n      return fn.call(elems);\n    }\n    return len ? fn(elems[0], key) : emptyGet;\n  };\n  var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  }\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n  var acceptData = function(owner) {\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function(owner) {\n      var value = owner[this.expando];\n      if (!value) {\n        value = {};\n        if (acceptData(owner)) {\n          if (owner.nodeType) {\n            owner[this.expando] = value;\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value,\n              configurable: true\n            });\n          }\n        }\n      }\n      return value;\n    },\n    set: function(owner, data, value) {\n      var prop, cache = this.cache(owner);\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value;\n      } else {\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n      return cache;\n    },\n    get: function(owner, key) {\n      return key === void 0 ? this.cache(owner) : owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function(owner, key, value) {\n      if (key === void 0 || key && typeof key === \"string\" && value === void 0) {\n        return this.get(owner, key);\n      }\n      this.set(owner, key, value);\n      return value !== void 0 ? value : key;\n    },\n    remove: function(owner, key) {\n      var i, cache = owner[this.expando];\n      if (cache === void 0) {\n        return;\n      }\n      if (key !== void 0) {\n        if (Array.isArray(key)) {\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key);\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n        i = key.length;\n        while (i--) {\n          delete cache[key[i]];\n        }\n      }\n      if (key === void 0 || jQuery.isEmptyObject(cache)) {\n        if (owner.nodeType) {\n          owner[this.expando] = void 0;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function(owner) {\n      var cache = owner[this.expando];\n      return cache !== void 0 && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data();\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/, rmultiDash = /[A-Z]/g;\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n    if (data === \"false\") {\n      return false;\n    }\n    if (data === \"null\") {\n      return null;\n    }\n    if (data === +data + \"\") {\n      return +data;\n    }\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n    return data;\n  }\n  function dataAttr(elem, key, data) {\n    var name;\n    if (data === void 0 && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {\n        }\n        dataUser.set(elem, key, data);\n      } else {\n        data = void 0;\n      }\n    }\n    return data;\n  }\n  jQuery.extend({\n    hasData: function(elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function(elem, name, data) {\n      return dataUser.access(elem, name, data);\n    },\n    removeData: function(elem, name) {\n      dataUser.remove(elem, name);\n    },\n    _data: function(elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function(elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function(key, value) {\n      var i, name, data, elem = this[0], attrs = elem && elem.attributes;\n      if (key === void 0) {\n        if (this.length) {\n          data = dataUser.get(elem);\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n            while (i--) {\n              if (attrs[i]) {\n                name = attrs[i].name;\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n        return data;\n      }\n      if (typeof key === \"object\") {\n        return this.each(function() {\n          dataUser.set(this, key);\n        });\n      }\n      return access(this, function(value2) {\n        var data2;\n        if (elem && value2 === void 0) {\n          data2 = dataUser.get(elem, key);\n          if (data2 !== void 0) {\n            return data2;\n          }\n          data2 = dataAttr(elem, key);\n          if (data2 !== void 0) {\n            return data2;\n          }\n          return;\n        }\n        this.each(function() {\n          dataUser.set(this, key, value2);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function(key) {\n      return this.each(function() {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function(elem, type, data) {\n      var queue;\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type);\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n        return queue || [];\n      }\n    },\n    dequeue: function(elem, type) {\n      type = type || \"fx\";\n      var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function() {\n        jQuery.dequeue(elem, type);\n      };\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n      if (fn) {\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        }\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    _queueHooks: function(elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function() {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function(type, data) {\n      var setter = 2;\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n      return data === void 0 ? this : this.each(function() {\n        var queue = jQuery.queue(this, type, data);\n        jQuery._queueHooks(this, type);\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function(type) {\n      return this.each(function() {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function(type) {\n      return this.queue(type || \"fx\", []);\n    },\n    promise: function(type, obj) {\n      var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function() {\n        if (!--count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = void 0;\n      }\n      type = type || \"fx\";\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n  var isAttached = function(elem) {\n    return jQuery.contains(elem.ownerDocument, elem);\n  }, composed = { composed: true };\n  if (documentElement.getRootNode) {\n    isAttached = function(elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n  var isHiddenWithinTree = function(elem, el) {\n    elem = el || elem;\n    return elem.style.display === \"none\" || elem.style.display === \"\" && isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {\n      return tween.cur();\n    } : function() {\n      return jQuery.css(elem, prop, \"\");\n    }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"), initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      initial = initial / 2;\n      unit = unit || initialInUnit[3];\n      initialInUnit = +initial || 1;\n      while (maxIterations--) {\n        jQuery.style(elem, prop, initialInUnit + unit);\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n        initialInUnit = initialInUnit / scale;\n      }\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit);\n      valueParts = valueParts || [];\n    }\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0;\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n    return adjusted;\n  }\n  var defaultDisplayMap = {};\n  function getDefaultDisplay(elem) {\n    var temp, doc = elem.ownerDocument, nodeName2 = elem.nodeName, display = defaultDisplayMap[nodeName2];\n    if (display) {\n      return display;\n    }\n    temp = doc.body.appendChild(doc.createElement(nodeName2));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n    if (display === \"none\") {\n      display = \"block\";\n    }\n    defaultDisplayMap[nodeName2] = display;\n    return display;\n  }\n  function showHide(elements, show) {\n    var display, elem, values = [], index = 0, length = elements.length;\n    for (; index < length; index++) {\n      elem = elements[index];\n      if (!elem.style) {\n        continue;\n      }\n      display = elem.style.display;\n      if (show) {\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\";\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    }\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n    return elements;\n  }\n  jQuery.fn.extend({\n    show: function() {\n      return showHide(this, true);\n    },\n    hide: function() {\n      return showHide(this);\n    },\n    toggle: function(state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n      return this.each(function() {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n  (function() {\n    var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement(\"div\")), input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input);\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n    div.innerHTML = \"<option></option>\";\n    support.option = !!div.lastChild;\n  })();\n  var wrapMap = {\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, \"<select multiple='multiple'>\", \"</select>\"];\n  }\n  function getAll(context, tag) {\n    var ret;\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n    if (tag === void 0 || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n    return ret;\n  }\n  function setGlobalEval(elems, refElements) {\n    var i = 0, l = elems.length;\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n  var rhtml = /<|&#?\\w+;/;\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem, tmp, tag, wrap, attached, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;\n    for (; i < l; i++) {\n      elem = elems[i];\n      if (elem || elem === 0) {\n        if (toType(elem) === \"object\") {\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem);\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem));\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\"));\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];\n          j = wrap[0];\n          while (j--) {\n            tmp = tmp.lastChild;\n          }\n          jQuery.merge(nodes, tmp.childNodes);\n          tmp = fragment.firstChild;\n          tmp.textContent = \"\";\n        }\n      }\n    }\n    fragment.textContent = \"\";\n    i = 0;\n    while (elem = nodes[i++]) {\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n        continue;\n      }\n      attached = isAttached(elem);\n      tmp = getAll(fragment.appendChild(elem), \"script\");\n      if (attached) {\n        setGlobalEval(tmp);\n      }\n      if (scripts) {\n        j = 0;\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n  var rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n  function expectSync(elem, type) {\n    return elem === safeActiveElement() === (type === \"focus\");\n  }\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {\n    }\n  }\n  function on(elem, types, selector, data, fn, one) {\n    var origFn, type;\n    if (typeof types === \"object\") {\n      if (typeof selector !== \"string\") {\n        data = data || selector;\n        selector = void 0;\n      }\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one);\n      }\n      return elem;\n    }\n    if (data == null && fn == null) {\n      fn = selector;\n      data = selector = void 0;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        fn = data;\n        data = void 0;\n      } else {\n        fn = data;\n        data = selector;\n        selector = void 0;\n      }\n    }\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n    if (one === 1) {\n      origFn = fn;\n      fn = function(event) {\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      };\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n    return elem.each(function() {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  jQuery.event = {\n    global: {},\n    add: function(elem, types, handler, data, selector) {\n      var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);\n      if (!acceptData(elem)) {\n        return;\n      }\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      }\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      }\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      }\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function(e) {\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : void 0;\n        };\n      }\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort();\n        if (!type) {\n          continue;\n        }\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        special = jQuery.event.special[type] || {};\n        handleObj = jQuery.extend({\n          type,\n          origType,\n          data,\n          handler,\n          guid: handler.guid,\n          selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn);\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0;\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n        if (special.add) {\n          special.add.call(elem, handleObj);\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        }\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        }\n        jQuery.event.global[type] = true;\n      }\n    },\n    remove: function(elem, types, handler, selector, mappedTypes) {\n      var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      }\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort();\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n          continue;\n        }\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\");\n        origCount = j = handlers.length;\n        while (j--) {\n          handleObj = handlers[j];\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        }\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n          delete events[type];\n        }\n      }\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function(nativeEvent) {\n      var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), event = jQuery.event.fix(nativeEvent), handlers = (dataPriv.get(this, \"events\") || Object.create(null))[event.type] || [], special = jQuery.event.special[event.type] || {};\n      args[0] = event;\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      event.delegateTarget = this;\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      }\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n      i = 0;\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n            if (ret !== void 0) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      }\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n      return event.result;\n    },\n    handlers: function(event, handlers) {\n      var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;\n      if (delegateCount && cur.nodeType && !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i];\n              sel = handleObj.selector + \" \";\n              if (matchedSelectors[sel] === void 0) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n            if (matchedHandlers.length) {\n              handlerQueue.push({ elem: cur, handlers: matchedHandlers });\n            }\n          }\n        }\n      }\n      cur = this;\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({ elem: cur, handlers: handlers.slice(delegateCount) });\n      }\n      return handlerQueue;\n    },\n    addProp: function(name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function() {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function() {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function(value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value\n          });\n        }\n      });\n    },\n    fix: function(originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        noBubble: true\n      },\n      click: {\n        setup: function(data) {\n          var el = this || data;\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            leverageNative(el, \"click\", returnTrue);\n          }\n          return false;\n        },\n        trigger: function(data) {\n          var el = this || data;\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            leverageNative(el, \"click\");\n          }\n          return true;\n        },\n        _default: function(event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, \"input\") && dataPriv.get(target, \"click\") || nodeName(target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function(event) {\n          if (event.result !== void 0 && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  };\n  function leverageNative(el, type, expectSync2) {\n    if (!expectSync2) {\n      if (dataPriv.get(el, type) === void 0) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n      return;\n    }\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function(event) {\n        var notAsync, result, saved = dataPriv.get(this, type);\n        if (event.isTrigger & 1 && this[type]) {\n          if (!saved.length) {\n            saved = slice.call(arguments);\n            dataPriv.set(this, type, saved);\n            notAsync = expectSync2(this, type);\n            this[type]();\n            result = dataPriv.get(this, type);\n            if (saved !== result || notAsync) {\n              dataPriv.set(this, type, false);\n            } else {\n              result = {};\n            }\n            if (saved !== result) {\n              event.stopImmediatePropagation();\n              event.preventDefault();\n              return result && result.value;\n            }\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          }\n        } else if (saved.length) {\n          dataPriv.set(this, type, {\n            value: jQuery.event.trigger(jQuery.extend(saved[0], jQuery.Event.prototype), saved.slice(1), this)\n          });\n          event.stopImmediatePropagation();\n        }\n      }\n    });\n  }\n  jQuery.removeEvent = function(elem, type, handle) {\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n  jQuery.Event = function(src, props) {\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    }\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type;\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === void 0 && src.returnValue === false ? returnTrue : returnFalse;\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget;\n    } else {\n      this.type = src;\n    }\n    if (props) {\n      jQuery.extend(this, props);\n    }\n    this.timeStamp = src && src.timeStamp || Date.now();\n    this[jQuery.expando] = true;\n  };\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function() {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function() {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function() {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n      this.stopPropagation();\n    }\n  };\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: true\n  }, jQuery.event.addProp);\n  jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function(type, delegateType) {\n    jQuery.event.special[type] = {\n      setup: function() {\n        leverageNative(this, type, expectSync);\n        return false;\n      },\n      trigger: function() {\n        leverageNative(this, type);\n        return true;\n      },\n      _default: function() {\n        return true;\n      },\n      delegateType\n    };\n  });\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function(orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function(event) {\n        var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function(types, selector, data, fn) {\n      return on(this, types, selector, data, fn);\n    },\n    one: function(types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1);\n    },\n    off: function(types, selector, fn) {\n      var handleObj, type;\n      if (types && types.preventDefault && types.handleObj) {\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n      if (typeof types === \"object\") {\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n        return this;\n      }\n      if (selector === false || typeof selector === \"function\") {\n        fn = selector;\n        selector = void 0;\n      }\n      if (fn === false) {\n        fn = returnFalse;\n      }\n      return this.each(function() {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i, rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n    return elem;\n  }\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n    return elem;\n  }\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n    if (dest.nodeType !== 1) {\n      return;\n    }\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n      if (events) {\n        dataPriv.remove(dest, \"handle events\");\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    }\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  }\n  function fixInput(src, dest) {\n    var nodeName2 = dest.nodeName.toLowerCase();\n    if (nodeName2 === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked;\n    } else if (nodeName2 === \"input\" || nodeName2 === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n  function domManip(collection, args, callback, ignored) {\n    args = flat(args);\n    var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], valueIsFunction = isFunction(value);\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function(index) {\n        var self = collection.eq(index);\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n        domManip(self, args, callback, ignored);\n      });\n    }\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      }\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length;\n        for (; i < l; i++) {\n          node = fragment;\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true);\n            if (hasScripts) {\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n          callback.call(collection[i], node, i);\n        }\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument;\n          jQuery.map(scripts, restoreScript);\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\")\n                  }, doc);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n    return collection;\n  }\n  function remove(elem, selector, keepData) {\n    var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0;\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n        node.parentNode.removeChild(node);\n      }\n    }\n    return elem;\n  }\n  jQuery.extend({\n    htmlPrefilter: function(html) {\n      return html;\n    },\n    clone: function(elem, dataAndEvents, deepDataAndEvents) {\n      var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = isAttached(elem);\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      }\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      }\n      destElements = getAll(clone, \"script\");\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      }\n      return clone;\n    },\n    cleanData: function(elems) {\n      var data, elem, type, special = jQuery.event.special, i = 0;\n      for (; (elem = elems[i]) !== void 0; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type);\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            }\n            elem[dataPriv.expando] = void 0;\n          }\n          if (elem[dataUser.expando]) {\n            elem[dataUser.expando] = void 0;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function(selector) {\n      return remove(this, selector, true);\n    },\n    remove: function(selector) {\n      return remove(this, selector);\n    },\n    text: function(value) {\n      return access(this, function(value2) {\n        return value2 === void 0 ? jQuery.text(this) : this.empty().each(function() {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value2;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function() {\n      return domManip(this, arguments, function(elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function() {\n      return domManip(this, arguments, function(elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function() {\n      return domManip(this, arguments, function(elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function() {\n      return domManip(this, arguments, function(elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function() {\n      var elem, i = 0;\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          jQuery.cleanData(getAll(elem, false));\n          elem.textContent = \"\";\n        }\n      }\n      return this;\n    },\n    clone: function(dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function() {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function(value) {\n      return access(this, function(value2) {\n        var elem = this[0] || {}, i = 0, l = this.length;\n        if (value2 === void 0 && elem.nodeType === 1) {\n          return elem.innerHTML;\n        }\n        if (typeof value2 === \"string\" && !rnoInnerhtml.test(value2) && !wrapMap[(rtagName.exec(value2) || [\"\", \"\"])[1].toLowerCase()]) {\n          value2 = jQuery.htmlPrefilter(value2);\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {};\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value2;\n              }\n            }\n            elem = 0;\n          } catch (e) {\n          }\n        }\n        if (elem) {\n          this.empty().append(value2);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function() {\n      var ignored = [];\n      return domManip(this, arguments, function(elem) {\n        var parent = this.parentNode;\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        }\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function(name, original) {\n    jQuery.fn[name] = function(selector) {\n      var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems);\n        push.apply(ret, elems.get());\n      }\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n  var getStyles = function(elem) {\n    var view = elem.ownerDocument.defaultView;\n    if (!view || !view.opener) {\n      view = window2;\n    }\n    return view.getComputedStyle(elem);\n  };\n  var swap = function(elem, options, callback) {\n    var ret, name, old = {};\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n    ret = callback.call(elem);\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n    return ret;\n  };\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n  (function() {\n    function computeStyleTests() {\n      if (!div) {\n        return;\n      }\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window2.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\";\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container);\n      div = null;\n    }\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n    var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document.createElement(\"div\"), div = document.createElement(\"div\");\n    if (!div.style) {\n      return;\n    }\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function() {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function() {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function() {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function() {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function() {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      reliableTrDimensions: function() {\n        var table, tr, trChild, trStyle;\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement(\"table\");\n          tr = document.createElement(\"tr\");\n          trChild = document.createElement(\"div\");\n          table.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n          tr.style.cssText = \"border:1px solid\";\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\";\n          trChild.style.display = \"block\";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window2.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;\n          documentElement.removeChild(table);\n        }\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n  function curCSS(elem, name, computed) {\n    var width, minWidth, maxWidth, ret, style = elem.style;\n    computed = computed || getStyles(elem);\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      }\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth;\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width;\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n    return ret !== void 0 ? ret + \"\" : ret;\n  }\n  function addGetHookIf(conditionFn, hookFn) {\n    return {\n      get: function() {\n        if (conditionFn()) {\n          delete this.get;\n          return;\n        }\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"], emptyStyle = document.createElement(\"div\").style, vendorProps = {};\n  function vendorPropName(name) {\n    var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  }\n  function finalPropName(name) {\n    var final = jQuery.cssProps[name] || vendorProps[name];\n    if (final) {\n      return final;\n    }\n    if (name in emptyStyle) {\n      return name;\n    }\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n  var rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" }, cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  };\n  function setPositiveNumber(_elem, value, subtract) {\n    var matches = rcssNum.exec(value);\n    return matches ? Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0, extra = 0, delta = 0;\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n    for (; i < 4; i += 2) {\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      }\n      if (!isBorderBox) {\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      } else {\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        }\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    }\n    if (!isBorderBox && computedVal >= 0) {\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5)) || 0;\n    }\n    return delta;\n  }\n  function getWidthOrHeight(elem, dimension, extra) {\n    var styles = getStyles(elem), boxSizingNeeded = !support.boxSizingReliable() || extra, isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\", valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n      val = \"auto\";\n    }\n    if ((!support.boxSizingReliable() && isBorderBox || !support.reliableTrDimensions() && nodeName(elem, \"tr\") || val === \"auto\" || !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") && elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\";\n      valueIsBorderBox = offsetProp in elem;\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    }\n    val = parseFloat(val) || 0;\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, val) + \"px\";\n  }\n  jQuery.extend({\n    cssHooks: {\n      opacity: {\n        get: function(elem, computed) {\n          if (computed) {\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"gridArea\": true,\n      \"gridColumn\": true,\n      \"gridColumnEnd\": true,\n      \"gridColumnStart\": true,\n      \"gridRow\": true,\n      \"gridRowEnd\": true,\n      \"gridRowStart\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    cssProps: {},\n    style: function(elem, name, value, extra) {\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      }\n      var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      }\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n      if (value !== void 0) {\n        type = typeof value;\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret);\n          type = \"number\";\n        }\n        if (value == null || value !== value) {\n          return;\n        }\n        if (type === \"number\" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        }\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        }\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== void 0) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== void 0) {\n          return ret;\n        }\n        return style[name];\n      }\n    },\n    css: function(elem, name, extra, styles) {\n      var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      }\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      }\n      if (val === void 0) {\n        val = curCSS(elem, name, styles);\n      }\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      }\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function(_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function(elem, computed, extra) {\n        if (computed) {\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function() {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function(elem, value, extra) {\n        var matches, styles = getStyles(elem), scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === \"absolute\", boxSizingNeeded = scrollboxSizeBuggy || extra, isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\", subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        }\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function(elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function() {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  });\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function(prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function(value) {\n        var i = 0, expanded = {}, parts = typeof value === \"string\" ? value.split(\" \") : [value];\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n        return expanded;\n      }\n    };\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function(name, value) {\n      return access(this, function(elem, name2, value2) {\n        var styles, len, map = {}, i = 0;\n        if (Array.isArray(name2)) {\n          styles = getStyles(elem);\n          len = name2.length;\n          for (; i < len; i++) {\n            map[name2[i]] = jQuery.css(elem, name2[i], false, styles);\n          }\n          return map;\n        }\n        return value2 !== void 0 ? jQuery.style(elem, name2, value2) : jQuery.css(elem, name2);\n      }, name, value, arguments.length > 1);\n    }\n  });\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function(elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function() {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function(percent) {\n      var eased, hooks = Tween.propHooks[this.prop];\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n      this.now = (this.end - this.start) * eased + this.start;\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function(tween) {\n        var result;\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        }\n        result = jQuery.css(tween.elem, tween.prop, \"\");\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function(tween) {\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  };\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function(tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function(p) {\n      return p;\n    },\n    swing: function(p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init;\n  jQuery.fx.step = {};\n  var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window2.requestAnimationFrame) {\n        window2.requestAnimationFrame(schedule);\n      } else {\n        window2.setTimeout(schedule, jQuery.fx.interval);\n      }\n      jQuery.fx.tick();\n    }\n  }\n  function createFxNow() {\n    window2.setTimeout(function() {\n      fxNow = void 0;\n    });\n    return fxNow = Date.now();\n  }\n  function genFx(type, includeWidth) {\n    var which, i = 0, attrs = { height: type };\n    includeWidth = includeWidth ? 1 : 0;\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n    return attrs;\n  }\n  function createTween(value, prop, animation) {\n    var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]), index = 0, length = collection.length;\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        return tween;\n      }\n    }\n  }\n  function defaultPrefilter(elem, props, opts) {\n    var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = \"width\" in props || \"height\" in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, \"fxshow\");\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n        hooks.empty.fire = function() {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n      hooks.unqueued++;\n      anim.always(function() {\n        anim.always(function() {\n          hooks.unqueued--;\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    }\n    for (prop in props) {\n      value = props[prop];\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          if (value === \"show\" && dataShow && dataShow[prop] !== void 0) {\n            hidden = true;\n          } else {\n            continue;\n          }\n        }\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    }\n    propTween = !jQuery.isEmptyObject(props);\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    }\n    if (isBox && elem.nodeType === 1) {\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY];\n      restoreDisplay = dataShow && dataShow.display;\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n      display = jQuery.css(elem, \"display\");\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      }\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          if (!propTween) {\n            anim.done(function() {\n              style.display = restoreDisplay;\n            });\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n          style.display = \"inline-block\";\n        }\n      }\n    }\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function() {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    }\n    propTween = false;\n    for (prop in orig) {\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", { display: restoreDisplay });\n        }\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        }\n        if (hidden) {\n          showHide([elem], true);\n        }\n        anim.done(function() {\n          if (!hidden) {\n            showHide([elem]);\n          }\n          dataPriv.remove(elem, \"fxshow\");\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      }\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks;\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n      hooks = jQuery.cssHooks[name];\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name];\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n  function Animation(elem, properties, options) {\n    var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function() {\n      delete tick.elem;\n    }), tick = function() {\n      if (stopped) {\n        return false;\n      }\n      var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index2 = 0, length2 = animation.tweens.length;\n      for (; index2 < length2; index2++) {\n        animation.tweens[index2].run(percent);\n      }\n      deferred.notifyWith(elem, [animation, percent, remaining]);\n      if (percent < 1 && length2) {\n        return remaining;\n      }\n      if (!length2) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      }\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    }, animation = deferred.promise({\n      elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function(prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function(gotoEnd) {\n        var index2 = 0, length2 = gotoEnd ? animation.tweens.length : 0;\n        if (stopped) {\n          return this;\n        }\n        stopped = true;\n        for (; index2 < length2; index2++) {\n          animation.tweens[index2].run(1);\n        }\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n        return this;\n      }\n    }), props = animation.props;\n    propFilter(props, animation.opts.specialEasing);\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n        return result;\n      }\n    }\n    jQuery.map(props, createTween, animation);\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    }\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function(prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function(props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n      var prop, index = 0, length = props.length;\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function(callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n  jQuery.speed = function(speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    };\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    }\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    }\n    opt.old = opt.complete;\n    opt.complete = function() {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n    return opt;\n  };\n  jQuery.fn.extend({\n    fadeTo: function(speed, to, easing, callback) {\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show().end().animate({ opacity: to }, speed, easing, callback);\n    },\n    animate: function(prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function() {\n        var anim = Animation(this, jQuery.extend({}, prop), optall);\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function(type, clearQueue, gotoEnd) {\n      var stopQueue = function(hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = void 0;\n      }\n      if (clearQueue) {\n        this.queue(type || \"fx\", []);\n      }\n      return this.each(function() {\n        var dequeue = true, index = type != null && type + \"queueHooks\", timers = jQuery.timers, data = dataPriv.get(this);\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n        for (index = timers.length; index--; ) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        }\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function(type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n      return this.each(function() {\n        var index, data = dataPriv.get(this), queue = data[type + \"queue\"], hooks = data[type + \"queueHooks\"], timers = jQuery.timers, length = queue ? queue.length : 0;\n        data.finish = true;\n        jQuery.queue(this, type, []);\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        }\n        for (index = timers.length; index--; ) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        }\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        }\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function(_i, name) {\n    var cssFn = jQuery.fn[name];\n    jQuery.fn[name] = function(speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  });\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: { opacity: \"show\" },\n    fadeOut: { opacity: \"hide\" },\n    fadeToggle: { opacity: \"toggle\" }\n  }, function(name, props) {\n    jQuery.fn[name] = function(speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n  jQuery.fx.tick = function() {\n    var timer, i = 0, timers = jQuery.timers;\n    fxNow = Date.now();\n    for (; i < timers.length; i++) {\n      timer = timers[i];\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n    fxNow = void 0;\n  };\n  jQuery.fx.timer = function(timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n  jQuery.fx.interval = 13;\n  jQuery.fx.start = function() {\n    if (inProgress) {\n      return;\n    }\n    inProgress = true;\n    schedule();\n  };\n  jQuery.fx.stop = function() {\n    inProgress = null;\n  };\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    _default: 400\n  };\n  jQuery.fn.delay = function(time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function(next, hooks) {\n      var timeout = window2.setTimeout(next, time);\n      hooks.stop = function() {\n        window2.clearTimeout(timeout);\n      };\n    });\n  };\n  (function() {\n    var input = document.createElement(\"input\"), select = document.createElement(\"select\"), opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\";\n    support.checkOn = input.value !== \"\";\n    support.optSelected = opt.selected;\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n  var boolHook, attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function(name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function(name) {\n      return this.each(function() {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function(elem, name, value) {\n      var ret, hooks, nType = elem.nodeType;\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      }\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : void 0);\n      }\n      if (value !== void 0) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {\n          return ret;\n        }\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n      ret = jQuery.find.attr(elem, name);\n      return ret == null ? void 0 : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function(elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n            if (val) {\n              elem.value = val;\n            }\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function(elem, value) {\n      var name, i = 0, attrNames = value && value.match(rnothtmlwhite);\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  });\n  boolHook = {\n    set: function(elem, value, name) {\n      if (value === false) {\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function(_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n    attrHandle[name] = function(elem, name2, isXML) {\n      var ret, handle, lowercaseName = name2.toLowerCase();\n      if (!isXML) {\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name2, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function(name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function(name) {\n      return this.each(function() {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function(elem, name, value) {\n      var ret, hooks, nType = elem.nodeType;\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n      if (value !== void 0) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {\n          return ret;\n        }\n        return elem[name] = value;\n      }\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function(elem) {\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  });\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function(elem) {\n        var parent = elem.parentNode;\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n        return null;\n      },\n      set: function(elem) {\n        var parent = elem.parentNode;\n        if (parent) {\n          parent.selectedIndex;\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n  jQuery.each([\n    \"tabIndex\",\n    \"readOnly\",\n    \"maxLength\",\n    \"cellSpacing\",\n    \"cellPadding\",\n    \"rowSpan\",\n    \"colSpan\",\n    \"useMap\",\n    \"frameBorder\",\n    \"contentEditable\"\n  ], function() {\n    jQuery.propFix[this.toLowerCase()] = this;\n  });\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n    return [];\n  }\n  jQuery.fn.extend({\n    addClass: function(value) {\n      var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n      if (isFunction(value)) {\n        return this.each(function(j2) {\n          jQuery(this).addClass(value.call(this, j2, getClass(this)));\n        });\n      }\n      classes = classesToArray(value);\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n          if (cur) {\n            j = 0;\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            }\n            finalValue = stripAndCollapse(cur);\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n      return this;\n    },\n    removeClass: function(value) {\n      var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n      if (isFunction(value)) {\n        return this.each(function(j2) {\n          jQuery(this).removeClass(value.call(this, j2, getClass(this)));\n        });\n      }\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n      classes = classesToArray(value);\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n          if (cur) {\n            j = 0;\n            while (clazz = classes[j++]) {\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            }\n            finalValue = stripAndCollapse(cur);\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n      return this;\n    },\n    toggleClass: function(value, stateVal) {\n      var type = typeof value, isValidValue = type === \"string\" || Array.isArray(value);\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n      if (isFunction(value)) {\n        return this.each(function(i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n      return this.each(function() {\n        var className, i, self, classNames;\n        if (isValidValue) {\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n          while (className = classNames[i++]) {\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          }\n        } else if (value === void 0 || type === \"boolean\") {\n          className = getClass(this);\n          if (className) {\n            dataPriv.set(this, \"__className__\", className);\n          }\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function(selector) {\n      var className, elem, i = 0;\n      className = \" \" + selector + \" \";\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function(value) {\n      var hooks, ret, valueIsFunction, elem = this[0];\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== void 0) {\n            return ret;\n          }\n          ret = elem.value;\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          }\n          return ret == null ? \"\" : ret;\n        }\n        return;\n      }\n      valueIsFunction = isFunction(value);\n      return this.each(function(i) {\n        var val;\n        if (this.nodeType !== 1) {\n          return;\n        }\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        }\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function(value2) {\n            return value2 == null ? \"\" : value2 + \"\";\n          });\n        }\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === void 0) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function(elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function(elem) {\n          var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === \"select-one\", values = one ? null : [], max = one ? index + 1 : options.length;\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          }\n          for (; i < max; i++) {\n            option = options[i];\n            if ((option.selected || i === index) && !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              value = jQuery(option).val();\n              if (one) {\n                return value;\n              }\n              values.push(value);\n            }\n          }\n          return values;\n        },\n        set: function(elem, value) {\n          var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;\n          while (i--) {\n            option = options[i];\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n          }\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n          return values;\n        }\n      }\n    }\n  });\n  jQuery.each([\"radio\", \"checkbox\"], function() {\n    jQuery.valHooks[this] = {\n      set: function(elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function(elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  });\n  support.focusin = \"onfocusin\" in window2;\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = function(e) {\n    e.stopPropagation();\n  };\n  jQuery.extend(jQuery.event, {\n    trigger: function(event, data, elem, onlyHandlers) {\n      var i, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [elem || document], type = hasOwn.call(event, \"type\") ? event.type : event, namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document;\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      }\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n      if (type.indexOf(\".\") > -1) {\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type;\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event);\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n      event.result = void 0;\n      if (!event.target) {\n        event.target = elem;\n      }\n      data = data == null ? [event] : jQuery.makeArray(data, [event]);\n      special = jQuery.event.special[type] || {};\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      }\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        }\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window2);\n        }\n      }\n      i = 0;\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type;\n        handle = (dataPriv.get(cur, \"events\") || Object.create(null))[event.type] && dataPriv.get(cur, \"handle\");\n        if (handle) {\n          handle.apply(cur, data);\n        }\n        handle = ontype && cur[ontype];\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n      event.type = type;\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            tmp = elem[ontype];\n            if (tmp) {\n              elem[ontype] = null;\n            }\n            jQuery.event.triggered = type;\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n            elem[type]();\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n            jQuery.event.triggered = void 0;\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n      return event.result;\n    },\n    simulate: function(type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function(type, data) {\n      return this.each(function() {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function(type, data) {\n      var elem = this[0];\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  });\n  if (!support.focusin) {\n    jQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function(orig, fix) {\n      var handler = function(event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n      jQuery.event.special[fix] = {\n        setup: function() {\n          var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix);\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function() {\n          var doc = this.ownerDocument || this.document || this, attaches = dataPriv.access(doc, fix) - 1;\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n  var location = window2.location;\n  var nonce = { guid: Date.now() };\n  var rquery = /\\?/;\n  jQuery.parseXML = function(data) {\n    var xml, parserErrorElem;\n    if (!data || typeof data !== \"string\") {\n      return null;\n    }\n    try {\n      xml = new window2.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {\n    }\n    parserErrorElem = xml && xml.getElementsByTagName(\"parsererror\")[0];\n    if (!xml || parserErrorElem) {\n      jQuery.error(\"Invalid XML: \" + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function(el) {\n        return el.textContent;\n      }).join(\"\\n\") : data));\n    }\n    return xml;\n  };\n  var rbracket = /\\[\\]$/, rCRLF = /\\r?\\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n    if (Array.isArray(obj)) {\n      jQuery.each(obj, function(i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          add(prefix, v);\n        } else {\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      add(prefix, obj);\n    }\n  }\n  jQuery.param = function(a, traditional) {\n    var prefix, s = [], add = function(key, valueOrFunction) {\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    };\n    if (a == null) {\n      return \"\";\n    }\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      jQuery.each(a, function() {\n        add(this.name, this.value);\n      });\n    } else {\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    }\n    return s.join(\"&\");\n  };\n  jQuery.fn.extend({\n    serialize: function() {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function() {\n      return this.map(function() {\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function() {\n        var type = this.type;\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function(_i, elem) {\n        var val = jQuery(this).val();\n        if (val == null) {\n          return null;\n        }\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function(val2) {\n            return { name: elem.name, value: val2.replace(rCRLF, \"\\r\\n\") };\n          });\n        }\n        return { name: elem.name, value: val.replace(rCRLF, \"\\r\\n\") };\n      }).get();\n    }\n  });\n  var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\\/\\//, prefilters = {}, transports = {}, allTypes = \"*/\".concat(\"*\"), originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href;\n  function addToPrefiltersOrTransports(structure) {\n    return function(dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n      var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n      if (isFunction(func)) {\n        while (dataType = dataTypes[i++]) {\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func);\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  }\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {}, seekingTransport = structure === transports;\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  }\n  function ajaxExtend(target, src) {\n    var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};\n    for (key in src) {\n      if (src[key] !== void 0) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n    return target;\n  }\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n      if (ct === void 0) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    }\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    }\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      }\n      finalDataType = finalDataType || firstDataType;\n    }\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n      return responses[finalDataType];\n    }\n  }\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n    current = dataTypes.shift();\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      }\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n      prev = current;\n      current = dataTypes.shift();\n      if (current) {\n        if (current === \"*\") {\n          current = prev;\n        } else if (prev !== \"*\" && prev !== current) {\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current];\n          if (!conv) {\n            for (conv2 in converters) {\n              tmp = conv2.split(\" \");\n              if (tmp[1] === current) {\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n                if (conv) {\n                  if (conv === true) {\n                    conv = converters[conv2];\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n                  break;\n                }\n              }\n            }\n          }\n          if (conv !== true) {\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n    return { state: \"success\", data: response };\n  }\n  jQuery.extend({\n    active: 0,\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      converters: {\n        \"* text\": String,\n        \"text html\": true,\n        \"text json\": JSON.parse,\n        \"text xml\": jQuery.parseXML\n      },\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    ajaxSetup: function(target, settings) {\n      return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    ajax: function(url, options) {\n      if (typeof url === \"object\") {\n        options = url;\n        url = void 0;\n      }\n      options = options || {};\n      var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed2, fireGlobals, i, uncached, s = jQuery.ajaxSetup({}, options), callbackContext = s.context || s, globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks(\"once memory\"), statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, strAbort = \"canceled\", jqXHR = {\n        readyState: 0,\n        getResponseHeader: function(key) {\n          var match;\n          if (completed2) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase() + \" \"] = (responseHeaders[match[1].toLowerCase() + \" \"] || []).concat(match[2]);\n              }\n            }\n            match = responseHeaders[key.toLowerCase() + \" \"];\n          }\n          return match == null ? null : match.join(\", \");\n        },\n        getAllResponseHeaders: function() {\n          return completed2 ? responseHeadersString : null;\n        },\n        setRequestHeader: function(name, value) {\n          if (completed2 == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n          return this;\n        },\n        overrideMimeType: function(type) {\n          if (completed2 == null) {\n            s.mimeType = type;\n          }\n          return this;\n        },\n        statusCode: function(map) {\n          var code;\n          if (map) {\n            if (completed2) {\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              for (code in map) {\n                statusCode[code] = [statusCode[code], map[code]];\n              }\n            }\n          }\n          return this;\n        },\n        abort: function(statusText) {\n          var finalText = statusText || strAbort;\n          if (transport) {\n            transport.abort(finalText);\n          }\n          done(0, finalText);\n          return this;\n        }\n      };\n      deferred.promise(jqXHR);\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\");\n      s.type = options.method || options.type || s.method || s.type;\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"];\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\");\n        try {\n          urlAnchor.href = s.url;\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          s.crossDomain = true;\n        }\n      }\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      }\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n      if (completed2) {\n        return jqXHR;\n      }\n      fireGlobals = jQuery.event && s.global;\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      }\n      s.type = s.type.toUpperCase();\n      s.hasContent = !rnoContent.test(s.type);\n      cacheURL = s.url.replace(rhash, \"\");\n      if (!s.hasContent) {\n        uncached = s.url.slice(cacheURL.length);\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data;\n          delete s.data;\n        }\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce.guid++ + uncached;\n        }\n        s.url = cacheURL + uncached;\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      }\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      }\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      }\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]);\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      }\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed2)) {\n        return jqXHR.abort();\n      }\n      strAbort = \"abort\";\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error);\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1;\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        }\n        if (completed2) {\n          return jqXHR;\n        }\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window2.setTimeout(function() {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n        try {\n          completed2 = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          if (completed2) {\n            throw e;\n          }\n          done(-1, e);\n        }\n      }\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess, success, error, response, modified, statusText = nativeStatusText;\n        if (completed2) {\n          return;\n        }\n        completed2 = true;\n        if (timeoutTimer) {\n          window2.clearTimeout(timeoutTimer);\n        }\n        transport = void 0;\n        responseHeadersString = headers || \"\";\n        jqXHR.readyState = status > 0 ? 4 : 0;\n        isSuccess = status >= 200 && status < 300 || status === 304;\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        }\n        if (!isSuccess && jQuery.inArray(\"script\", s.dataTypes) > -1 && jQuery.inArray(\"json\", s.dataTypes) < 0) {\n          s.converters[\"text script\"] = function() {\n          };\n        }\n        response = ajaxConvert(s, response, jqXHR, isSuccess);\n        if (isSuccess) {\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n            modified = jqXHR.getResponseHeader(\"etag\");\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          }\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\";\n          } else if (status === 304) {\n            statusText = \"notmodified\";\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          error = statusText;\n          if (status || !statusText) {\n            statusText = \"error\";\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        }\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\";\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        }\n        jqXHR.statusCode(statusCode);\n        statusCode = void 0;\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        }\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n          if (!--jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n      return jqXHR;\n    },\n    getJSON: function(url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function(url, callback) {\n      return jQuery.get(url, void 0, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function(_i, method) {\n    jQuery[method] = function(url, data, callback, type) {\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = void 0;\n      }\n      return jQuery.ajax(jQuery.extend({\n        url,\n        type: method,\n        dataType: type,\n        data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function(s) {\n    var i;\n    for (i in s.headers) {\n      if (i.toLowerCase() === \"content-type\") {\n        s.contentType = s.headers[i] || \"\";\n      }\n    }\n  });\n  jQuery._evalUrl = function(url, options, doc) {\n    return jQuery.ajax({\n      url,\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      converters: {\n        \"text script\": function() {\n        }\n      },\n      dataFilter: function(response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n  jQuery.fn.extend({\n    wrapAll: function(html) {\n      var wrap;\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        }\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n        wrap.map(function() {\n          var elem = this;\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n          return elem;\n        }).append(this);\n      }\n      return this;\n    },\n    wrapInner: function(html) {\n      if (isFunction(html)) {\n        return this.each(function(i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n      return this.each(function() {\n        var self = jQuery(this), contents = self.contents();\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function(html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function(i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function(selector) {\n      this.parent(selector).not(\"body\").each(function() {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n  jQuery.expr.pseudos.hidden = function(elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n  jQuery.expr.pseudos.visible = function(elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n  jQuery.ajaxSettings.xhr = function() {\n    try {\n      return new window2.XMLHttpRequest();\n    } catch (e) {\n    }\n  };\n  var xhrSuccessStatus = {\n    0: 200,\n    1223: 204\n  }, xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function(options) {\n    var callback, errorCallback;\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function(headers, complete) {\n          var i, xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password);\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          }\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          }\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          }\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          }\n          callback = function(type) {\n            return function() {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete(xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? { binary: xhr.response } : { text: xhr.responseText }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          };\n          xhr.onload = callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\");\n          if (xhr.onabort !== void 0) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function() {\n              if (xhr.readyState === 4) {\n                window2.setTimeout(function() {\n                  if (callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          }\n          callback = callback(\"abort\");\n          try {\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            if (callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function() {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  jQuery.ajaxPrefilter(function(s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  });\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function(text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  });\n  jQuery.ajaxPrefilter(\"script\", function(s) {\n    if (s.cache === void 0) {\n      s.cache = false;\n    }\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  });\n  jQuery.ajaxTransport(\"script\", function(s) {\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, callback;\n      return {\n        send: function(_, complete) {\n          script = jQuery(\"<script>\").attr(s.scriptAttrs || {}).prop({ charset: s.scriptCharset, src: s.url }).on(\"load error\", callback = function(evt) {\n            script.remove();\n            callback = null;\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          });\n          document.head.appendChild(script[0]);\n        },\n        abort: function() {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [], rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function() {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  });\n  jQuery.ajaxPrefilter(\"json jsonp\", function(s, originalSettings, jqXHR) {\n    var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\");\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      }\n      s.converters[\"script json\"] = function() {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n        return responseContainer[0];\n      };\n      s.dataTypes[0] = \"json\";\n      overwritten = window2[callbackName];\n      window2[callbackName] = function() {\n        responseContainer = arguments;\n      };\n      jqXHR.always(function() {\n        if (overwritten === void 0) {\n          jQuery(window2).removeProp(callbackName);\n        } else {\n          window2[callbackName] = overwritten;\n        }\n        if (s[callbackName]) {\n          s.jsonpCallback = originalSettings.jsonpCallback;\n          oldCallbacks.push(callbackName);\n        }\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n        responseContainer = overwritten = void 0;\n      });\n      return \"script\";\n    }\n  });\n  support.createHTMLDocument = function() {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }();\n  jQuery.parseHTML = function(data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n    var base, parsed, scripts;\n    if (!context) {\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\");\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && [];\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n    parsed = buildFragment([data], context, scripts);\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n    return jQuery.merge([], parsed.childNodes);\n  };\n  jQuery.fn.load = function(url, params, callback) {\n    var selector, type, response, self = this, off = url.indexOf(\" \");\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    }\n    if (isFunction(params)) {\n      callback = params;\n      params = void 0;\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    }\n    if (self.length > 0) {\n      jQuery.ajax({\n        url,\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function(responseText) {\n        response = arguments;\n        self.html(selector ? jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : responseText);\n      }).always(callback && function(jqXHR, status) {\n        self.each(function() {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n    return this;\n  };\n  jQuery.expr.pseudos.animated = function(elem) {\n    return jQuery.grep(jQuery.timers, function(fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n  jQuery.offset = {\n    setOffset: function(elem, options, i) {\n      var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, \"position\"), curElem = jQuery(elem), props = {};\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1;\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n      if (isFunction(options)) {\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    offset: function(options) {\n      if (arguments.length) {\n        return options === void 0 ? this : this.each(function(i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n      var rect, win, elem = this[0];\n      if (!elem) {\n        return;\n      }\n      if (!elem.getClientRects().length) {\n        return { top: 0, left: 0 };\n      }\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    position: function() {\n      if (!this[0]) {\n        return;\n      }\n      var offsetParent, offset, doc, elem = this[0], parentOffset = { top: 0, left: 0 };\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset();\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      }\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    offsetParent: function() {\n      return this.map(function() {\n        var offsetParent = this.offsetParent;\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || documentElement;\n      });\n    }\n  });\n  jQuery.each({ scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function(method, prop) {\n    var top = prop === \"pageYOffset\";\n    jQuery.fn[method] = function(val) {\n      return access(this, function(elem, method2, val2) {\n        var win;\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n        if (val2 === void 0) {\n          return win ? win[prop] : elem[method2];\n        }\n        if (win) {\n          win.scrollTo(!top ? val2 : win.pageXOffset, top ? val2 : win.pageYOffset);\n        } else {\n          elem[method2] = val2;\n        }\n      }, method, val, arguments.length);\n    };\n  });\n  jQuery.each([\"top\", \"left\"], function(_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function(elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop);\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  });\n  jQuery.each({ Height: \"height\", Width: \"width\" }, function(name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function(defaultExtra, funcName) {\n      jQuery.fn[funcName] = function(margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"), extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function(elem, type2, value2) {\n          var doc;\n          if (isWindow(elem)) {\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          }\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement;\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n          return value2 === void 0 ? jQuery.css(elem, type2, extra) : jQuery.style(elem, type2, value2, extra);\n        }, type, chainable ? margin : void 0, chainable);\n      };\n    });\n  });\n  jQuery.each([\n    \"ajaxStart\",\n    \"ajaxStop\",\n    \"ajaxComplete\",\n    \"ajaxError\",\n    \"ajaxSuccess\",\n    \"ajaxSend\"\n  ], function(_i, type) {\n    jQuery.fn[type] = function(fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function(types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function(types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function(selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function(selector, types, fn) {\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    },\n    hover: function(fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"), function(_i, name) {\n    jQuery.fn[name] = function(data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  });\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n  jQuery.proxy = function(fn, context) {\n    var tmp, args, proxy;\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    }\n    if (!isFunction(fn)) {\n      return void 0;\n    }\n    args = slice.call(arguments, 2);\n    proxy = function() {\n      return fn.apply(context || this, args.concat(slice.call(arguments)));\n    };\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n  jQuery.holdReady = function(hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n  jQuery.isNumeric = function(obj) {\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && !isNaN(obj - parseFloat(obj));\n  };\n  jQuery.trim = function(text) {\n    return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n  };\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  var _jQuery = window2.jQuery, _$ = window2.$;\n  jQuery.noConflict = function(deep) {\n    if (window2.$ === jQuery) {\n      window2.$ = _$;\n    }\n    if (deep && window2.jQuery === jQuery) {\n      window2.jQuery = _jQuery;\n    }\n    return jQuery;\n  };\n  if (typeof noGlobal === \"undefined\") {\n    window2.jQuery = window2.$ = jQuery;\n  }\n  return jQuery;\n});\n\n\n//# sourceURL=webpack://frontend-devenv/./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./css/maindev.scss":
/*!**************************!*\
  !*** ./css/maindev.scss ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://frontend-devenv/./css/maindev.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_require__("./js/maindev.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./css/maindev.scss");
/******/ 	
/******/ })()
;